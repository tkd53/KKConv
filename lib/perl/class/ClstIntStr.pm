#=====================================================================================
#                       ClstIntStr.pm
#                             bShinsuke Mori
#                             Last change 17 September 2012
#=====================================================================================

# 機  能 : クラスモデルの場合の Integer と String の一対一の対応関係
#
# 注意点 : 


#-------------------------------------------------------------------------------------
#                        declalations
#-------------------------------------------------------------------------------------

require "class/IntStr.pm";

package ClstIntStr;
@ISA = qw( IntStr );


#-------------------------------------------------------------------------------------
#                        new
#-------------------------------------------------------------------------------------

# new()
# new(FILENAME)
#
# 機  能 : FILENAME の各行を要素とみなしてインスタンスを生成する。
#
# 注意点 : なし

sub new{
    (@_ == 3) || die;

    my($type, @FILE) = @_;
    my($self) = {};

    $self->{"size"} = 0;
    $self->{"IntStr"} = [];                       # Int から Str への写像
    $self->{"StrInt"} = {};                       # Str から Int への写像
    $self->{"MorpClst"} = {};                     # Morp から Clst への写像

    open(FILE, $FILE[0]) || die "Can't open $FILE[0]: $!\n";
    $self->{"size"} = chomp(@{$self->{"IntStr"}} = <FILE>);
    close(FILE);

    foreach (0 .. $#{$self->{"IntStr"}}){
        ${$self->{"StrInt"}}{${$self->{"IntStr"}}[$_]} = $_;
    }

    open(FILE, $FILE[1]) || die "Can't open $FILE[1]: $!\n";
    while (chop($_ = <FILE>)){
        my($morp, $cstr) = split;
#        printf("%s => %s\n", $morp, $cstr);
        ${$self->{"MorpClst"}}{$morp} = $cstr;
    }
    close(FILE);

    return(bless($self));
}


#-------------------------------------------------------------------------------------
#                        int
#-------------------------------------------------------------------------------------

# int(MORP);
#
# 機  能 : MORP に対応する Int を返す。
#
# 注意点 : なし

sub int{
    (@_ == 2) || die;
    my($self, $morp) = @_;

    my($clst) = ${$self->{"MorpClst"}}{$morp};

    if (defined($clst)){                          # 既知語の場合
        return(${$self->{"StrInt"}}{$clst});
    }else{                                        # 未知語の場合
        my($part) = (split("/", $morp))[-1];
        return(${$self->{"StrInt"}}{$part});
    }
}


#-------------------------------------------------------------------------------------
#                        return
#-------------------------------------------------------------------------------------

1;


#=====================================================================================
#                        END
#=====================================================================================

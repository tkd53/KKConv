#=====================================================================================
#                        MorpIntStr.pm
#                             by Shinsuke MORI
#                             Last change : 17 September 2006
#=====================================================================================

# 機  能 : 単純マルコフモデルをハッシュを用いて実装する。
#
# 実  例 : なし
#
# 注意点 : 状態列からハッシュキーへの関数は連接であり、これが単射となる必要がある。


#-------------------------------------------------------------------------------------
#                        declalations
#-------------------------------------------------------------------------------------

require "class/IntStr.pm";

package MorpIntStr;
@ISA = qw( IntStr );


#-------------------------------------------------------------------------------------
#                        new
#-------------------------------------------------------------------------------------

# new()
# new(FILENAME)
#
# 機  能 : FILENAME の各行を要素とみなしてインスタンスを生成する。
#
# 注意点 : なし

sub new{
    (@_ == 1) || (@_ == 2) || die;

    my($type, $FILE) = @_;
    my($self) = {};

    $self->{"size"} = 0;
    $self->{"IntStr"} = [];                       # Int から Str への写像
    $self->{"StrInt"} = {};                       # Str から Int への写像

    if (@_ == 2){
#        warn "IntStr::new $FILE exist\n";
        open(FILE, $FILE) || die "Can't open $FILE: $!\n";
        $self->{"size"} = chomp(@{$self->{"IntStr"}} = <FILE>);
        close(FILE);

        foreach (0..$#{$self->{"IntStr"}}){
            ${$self->{"StrInt"}}{${$self->{"IntStr"}}[$_]} = $_;
        }
    }

    return(bless($self));
}


#-------------------------------------------------------------------------------------
#                        int
#-------------------------------------------------------------------------------------

# int(STR);
#
# 機  能 : STR に対応する Int を返す。
#
# 注意点 : STR が登録されていなければ、"/" ...

sub int{
    (@_ == 2) || die;
    my($self, $STR) = @_;

    return(&IntStr::int($self, $STR) || &IntStr::int($self, (split("/", $STR))[1]));
}


#-------------------------------------------------------------------------------------
#                        return
#-------------------------------------------------------------------------------------

1;


#=====================================================================================
#                        END
#=====================================================================================

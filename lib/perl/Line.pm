#=====================================================================================
#                        Lisp.pm
#                             by Shinsuke MORI
#                             Last change : 27 December 1996
#=====================================================================================

# 機  能 : file を line として扱う
#
# 実  例 : なし
#
# 注意点 : 複数のインスタンスを生成できない状態のまま


#-------------------------------------------------------------------------------------
#                        declalations
#-------------------------------------------------------------------------------------

package Line;


#-------------------------------------------------------------------------------------
#                        new
#-------------------------------------------------------------------------------------

# new(FILENAME)
#
# 機  能 : FILENAME で与えられるファイルの Line オブジェクトを生成する
#
# 実  例 : $Line = new Line ($filename);
#
# 注意点 : 特になし

sub new{
    (@_ == 2) || die;                             # TEXT から 候補あり
    my($type, $FILE) = @_;
    my($self);
    my($tmp);

    open(LINEFILE, $FILE) || die "Can't open file $FILE: $!\n";
    $self = LINEFILE;
    $line = 0;

    return(bless(\$self));
}


#-------------------------------------------------------------------------------------
#                        getline
#-------------------------------------------------------------------------------------

# getline(CHAR = "\\");
#
# 機  能 : FILE から一行読み込む。
#
# 実  例 : 
#
# 注意点 : 行末の CHAR は、次の行につながることを意味する。
#          Default CHAR = "\\";

sub getline{
    (@_ < 3) || die;
    my($self, $CHAR) = @_;
    my($buf) = "";

    $line++;

    ($CHAR eq "") && ($CHAR = "\\");

#    while ($buf .= <${$self->{"handle"}}>){
#    print "OK1 = ", $$self, "\n";
#    print <$$self>;
    while ($buf .= <LINEFILE>){
        last if (substr($buf, -2, 1) ne $CHAR);
        chop($buf);
        chop($buf);
    }

    return($buf);
}


#-------------------------------------------------------------------------------------
#                        lineno
#-------------------------------------------------------------------------------------

# lineno;
#
# 機  能 : FILE から読み込んだ行数を返す
#
# 実  例 : 
#
# 注意点 : 行末の CHAR は、次の行につながることを意味する。
#          Default CHAR = "\\";

sub lineno{
    (@_ == 1) || die;

    return($line);
}


#-------------------------------------------------------------------------------------
#                        return
#-------------------------------------------------------------------------------------

1;


#=====================================================================================
#                        END
#=====================================================================================

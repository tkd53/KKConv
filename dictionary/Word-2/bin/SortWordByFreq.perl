#!/usr/bin/env perl
#=====================================================================================
#                        SortWordByFreq.perl
#                             by Shinsuke MORI
#                             Last change : 30 November 2006
#=====================================================================================

# ��  ǽ : �����Ǥ����٤ι߽������٤ȶ��˽���
#
# ����ˡ : SortMorpByFreq.perl
#
# ��  �� : SortMorpByFreq.perl
#
# ������ : �ʤ�


#-------------------------------------------------------------------------------------
#                        require
#-------------------------------------------------------------------------------------

use Env;
use File::Basename;
unshift(@INC, dirname($0), "$HOME/usr/lib/perl", "$HOME/SLM/lib/perl");

require "Help.pm";
require "Math.pm";
require "class/IntStr.pm";
require "class/MarkovHashMemo.pm";
require "class/MarkovHashDisk.pm";
require "class/MarkovDiadMemo.pm";


#-------------------------------------------------------------------------------------
#                        check arguments
#-------------------------------------------------------------------------------------

((@ARGV == 0) && ($ARGV[0] ne "-help")) || &Help($0);
print STDERR join(" ", basename($0), @ARGV), "\n";


#-------------------------------------------------------------------------------------
#                        $WordIntStr ������
#-------------------------------------------------------------------------------------

$WordIntStr = new IntStr("WordIntStr.text");


#-------------------------------------------------------------------------------------
#                        $WordMarkov ������
#-------------------------------------------------------------------------------------

(-r (($FILE = "WordMarkov") . $MarkovHash::SUFFIX)) || die;
$WordMarkov = new MarkovHashDisk($WordIntStr->size, $FILE);


#-------------------------------------------------------------------------------------
#                        ����
#-------------------------------------------------------------------------------------

printf(STDERR "Sorting ... ");

@suff = sort { $WordMarkov->_1gram($b) <=> $WordMarkov->_1gram($a) }
             (scalar(@Tokens) .. $WordIntStr->size()-1);

printf(STDERR "Done\n");


#-------------------------------------------------------------------------------------
#                        ����
#-------------------------------------------------------------------------------------

printf(STDERR "Writing ... ");

foreach $n (@suff){
    printf("%6d %s\n", $WordMarkov->_1gram($n), $WordIntStr->str($n));
}

printf(STDERR "Done\n", $FILE);


#-------------------------------------------------------------------------------------
#                        exit
#-------------------------------------------------------------------------------------

exit(0);


#=====================================================================================
#                        END
#=====================================================================================

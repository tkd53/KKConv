#!/usr/bin/perl
#=====================================================================================
#                       conv-log.perl
#                             bShinsuke Mori
#                             Last change 12 July 2011
#=====================================================================================

# 機  能 : ファイルを読み込み、ソートしてユニークする。
#
# 使用法 : sortuniq.perl
#
# 実  例 : sortuniq.perl
#
# 注意点 : なし


#-------------------------------------------------------------------------------------
#                        require
#-------------------------------------------------------------------------------------

use Env;
use POSIX;
use English;
use File::Basename;
unshift(@INC, dirname($0), "$HOME/usr/lib/perl", "$HOME/CrossEntropy/methods");

require "Help.pm";


#-------------------------------------------------------------------------------------
#                        check arguments
#-------------------------------------------------------------------------------------

#((@ARGV == 1) && ($ARGV[0] ne "-help")) || &Help($0);
#print STDERR join(" ", basename($0), @ARGV), "\n";


#-------------------------------------------------------------------------------------
#                        set variables
#-------------------------------------------------------------------------------------

$DIRE = ".";
opendir(DIRE, $DIRE) || die "Can't open directory $DIRE\n";
@FILE = grep(m/\d\d\d\d-\d\d-\d\d\.wordkkci$/, readdir(DIRE));
closedir(DIRE);

$Line = 0;
foreach $FILE (@FILE){
    open(FILE) || die "Can't open $FILE: $!\n";
    $Line++ while (<FILE>);
    close(FILE);
}

printf(STDERR "昨日までのログの行数: %d\n", $Line);

$INPUT_RECORD_SEPARATOR = "\n\n";


#-------------------------------------------------------------------------------------
#                       main
#-------------------------------------------------------------------------------------

while (<>){
    @line = split("\n");
    (@line == 3) || die;
    $line[2] =~ s/\/(IN|EX|UM|IV|TK|H|K)//g;
    foreach $unit (split(" ", $line[2])){
        (scalar(split("/", $unit)) == 2) || die;
    }
    ($Line-- > 0) && next;
    print $line[2], "\n";
}


#-------------------------------------------------------------------------------------
#                        close
#-------------------------------------------------------------------------------------

exit(0);


#=====================================================================================
#                        END
#=====================================================================================
